{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/utils.js","../../node_modules/svelte-loading-spinners/dist/Rainbow.svelte","../../node_modules/svelte-loading-spinners/dist/Moon.svelte","../../node_modules/svelte-loading-spinners/dist/Diamonds.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.44.2' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","export const fetchWithTimeout = async function(resource, options = {}) {\r\n    const { timeout = 4700 } = options;\r\n    \r\n    const controller = new AbortController();\r\n    const id = setTimeout(() => controller.abort(), timeout);\r\n    const response = await fetch(resource, {\r\n      ...options,\r\n      signal: controller.signal  \r\n    });\r\n    clearTimeout(id);\r\n    return response;\r\n}","<script>;\r\nexport let color = \"#FF3E00\";\r\nexport let unit = \"px\";\r\nexport let duration = \"3s\";\r\nexport let size = \"60\";\r\n</script>\r\n\r\n<style>\r\n  .wrapper {\r\n    width: var(--size);\r\n    height: calc(var(--size) / 2);\r\n    overflow: hidden;\r\n  }\r\n  .rainbow {\r\n    width: var(--size);\r\n    height: var(--size);\r\n    border-left-color: transparent;\r\n    border-bottom-color: transparent;\r\n    border-top-color: var(--color);\r\n    border-right-color: var(--color);\r\n    box-sizing: border-box;\r\n    transform: rotate(-200deg);\r\n    border-radius: 50%;\r\n    border-style: solid;\r\n    animation: var(--duration) ease-in-out 0s infinite normal none running\r\n      rotate;\r\n  }\r\n  @keyframes rotate {\r\n    0% {\r\n      border-width: 10px;\r\n    }\r\n    25% {\r\n      border-width: 3px;\r\n    }\r\n    50% {\r\n      transform: rotate(115deg);\r\n      border-width: 10px;\r\n    }\r\n    75% {\r\n      border-width: 3px;\r\n    }\r\n    100% {\r\n      border-width: 10px;\r\n    }\r\n  }\r\n</style>\r\n\r\n<div\r\n  class=\"wrapper\"\r\n  style=\"--size: {size}{unit}; --color: {color}; --duration: {duration};\">\r\n  <div class=\"rainbow\" />\r\n</div>\r\n","<script>;\r\nexport let color = \"#FF3E00\";\r\nexport let unit = \"px\";\r\nexport let duration = \"0.6s\";\r\nexport let size = \"60\";\r\nlet moonSize = +size / 7;\r\nlet top = +size / 2 - moonSize / 2;\r\n</script>\r\n\r\n<style>\r\n  .wrapper {\r\n    height: var(--size);\r\n    width: var(--size);\r\n    border-radius: 100%;\r\n    animation: moonStretchDelay var(--duration) 0s infinite linear;\r\n    animation-fill-mode: forwards;\r\n    position: relative;\r\n  }\r\n  .circle-one {\r\n    top: var(--moonSize);\r\n    background-color: var(--color);\r\n    width: calc(var(--size) / 7);\r\n    height: calc(var(--size) / 7);\r\n    border-radius: 100%;\r\n    animation: moonStretchDelay var(--duration) 0s infinite linear;\r\n    animation-fill-mode: forwards;\r\n    opacity: 0.8;\r\n    position: absolute;\r\n  }\r\n  .circle-two {\r\n    opacity: 0.1;\r\n    border: calc(var(--size) / 7) solid var(--color);\r\n    height: var(--size);\r\n    width: var(--size);\r\n    border-radius: 100%;\r\n    box-sizing: border-box;\r\n  }\r\n  @keyframes moonStretchDelay {\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n</style>\r\n\r\n<div\r\n  class=\"wrapper\"\r\n  style=\"--size: {size}{unit}; --color: {color}; --moonSize: {top}{unit}; --duration: {duration};\">\r\n  <div class=\"circle-one\" />\r\n  <div class=\"circle-two\" />\r\n</div>\r\n","<script>;\r\nexport let color = \"#FF3E00\";\r\nexport let unit = \"px\";\r\nexport let duration = \"1.5s\";\r\nexport let size = \"60\";\r\n</script>\r\n\r\n<style>\r\n  span {\r\n    width: var(--size);\r\n    height: calc(var(--size) / 4);\r\n    position: relative;\r\n    display: block;\r\n  }\r\n  div {\r\n    width: calc(var(--size) / 4);\r\n    height: calc(var(--size) / 4);\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    border-radius: 2px;\r\n    background: var(--color);\r\n    transform: translateX(-50%) rotate(45deg) scale(0);\r\n    animation: diamonds var(--duration) linear infinite;\r\n  }\r\n  div:nth-child(1) {\r\n    animation-delay: calc(var(--duration) * 2 / 3 * -1);\r\n  }\r\n  div:nth-child(2) {\r\n    animation-delay: calc(var(--duration) * 2 / 3 * -2);\r\n  }\r\n  div:nth-child(3) {\r\n    animation-delay: calc(var(--duration) * 2 / 3 * -3);\r\n  }\r\n\r\n  @keyframes diamonds {\r\n    50% {\r\n      left: 50%;\r\n      transform: translateX(-50%) rotate(45deg) scale(1);\r\n    }\r\n    100% {\r\n      left: 100%;\r\n      transform: translateX(-50%) rotate(45deg) scale(0);\r\n    }\r\n  }\r\n</style>\r\n\r\n<span style=\"--size: {size}{unit}; --color:{color}; --duration: {duration};\">\r\n  <div />\r\n  <div />\r\n  <div />\r\n</span>\r\n","<script>\r\n\timport { fetchWithTimeout } from './utils.js';\r\n\timport { onMount } from 'svelte';\r\n\timport { Rainbow, Moon, Diamonds } from 'svelte-loading-spinners';\r\n\r\n\t// import { Terminal } from 'xterm';\r\n\t// import { FitAddon } from 'xterm-addon-fit';\r\n\r\n\tlet config = {\r\n\t\tpop: 30,\r\n\t\tgen: 20,\r\n\t\tk: 30,\r\n\t\ts: 20,\r\n\t\toperator_flip: 60,\r\n\t\tswitch_branches: 30,\r\n\t\tswitch_exp: 70,\r\n\t\ttruncate_node: 25,\r\n\t\tmax_mutations: 10,\r\n\t\tvalue_bottom_limit: -100,\r\n\t\tvalue_top_limit: 100,\r\n\t\tmax_code_lines: 100,\r\n\t\tmax_depth: 10,\r\n\t\tmax_width: 10,\r\n\t\talpha_vars: 15,\r\n\t\tmax_branch_depth: 3,\r\n\t\tpayload_size: 1500,\r\n\t\tsimulation_time: 7,\r\n\t\tmulti_mtu: false,\r\n\t\tmtu_bottom_limit: 100,\r\n\t\tmtu_upper_limit: 1600,\r\n\t\tmtu_step: 200,\r\n\t\twildcards: [\r\n\t\t\t\"ReduceCwnd (tcb);\",\r\n            \"segmentsAcked = SlowStart (tcb, segmentsAcked);\",\r\n            \"CongestionAvoidance (tcb, segmentsAcked);\",\r\n            \"TcpLinuxCongestionAvoidance (tcb, segmentsAcked);\"\r\n\t\t],\r\n\t\tvariables: [\r\n\t\t\t\"tcb->m_segmentSize\",\r\n\t\t\t\"tcb->m_cWnd\",\r\n\t\t\t\"segmentsAcked\",\r\n\t\t\t\"tcb->m_ssThresh\"\r\n\t\t]\r\n\t}\r\n\r\n\tlet current_gen = [];\r\n\tlet hallOfFame = [];\r\n\tlet generationNumber = null;\r\n\tlet baseline = null;\r\n\tlet currentBest = null;\r\n\tlet calculatingBaseline = false;\r\n\tlet autofixing = false;\r\n\tlet wildcardModalIsOpen = false;\r\n\tlet variableModalIsOpen = false;\r\n\r\n\tlet log = \"\";\r\n\tlet fullScreenTerminal = false;\r\n\r\n\tlet running = false;\r\n\r\n\tlet settingsDisplay = \"default\"; // default, advanced, sim\r\n\r\n\tlet individualsPoller;\r\n\tlet logPoller;\r\n\r\n\tconst labels = [];\r\n\tconst data = {\r\n\t\tlabels: labels,\r\n\t\tdatasets: [{\r\n\t\t\tlabel: 'Fitness',\r\n\t\t\tdata: [],\r\n\t\t\tborderColor: '#ccc',\r\n\t\t\tfill: false,\r\n\t\t\tcubicInterpolationMode: 'monotone',\r\n\t\t\ttension: 0.4,\r\n\t\t}]\r\n\t};\r\n\r\n\tconst configChart = {\r\n\t\ttype: 'line',\r\n\t\tdata: data,\r\n\t\toptions: {\r\n\t\t\tresponsive: true,\r\n\t\t\tmaintainAspectRatio: true,\r\n\t\t\tscales: {\r\n\t\t\t\ty: {\r\n\t\t\t\t\tdisplay: true,\r\n\t\t\t\t\ttext: 'Mbit/s'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tlet fitnessChart;\r\n\r\n\twindow.addEventListener(\"resize\", () => {fitnessChart.resize()});\r\n\r\n\t// const term = new Terminal({convertEol: true});\r\n\t// const fitAddon = new FitAddon();\r\n\t// term.loadAddon(fitAddon);\r\n\r\n\tonMount(async () => {\r\n\t\t// document.getElementById('terminal').innerHTML = \"\";\r\n\r\n\t\t\r\n\t\t// term.open(document.getElementById('terminal'));\t\r\n\t\t// fitAddon.fit();\r\n\t\tbulmaToast.setDefaults({\r\n\t\t\tduration: 2000,\r\n\t\t\tposition: 'bottom-right',\r\n\t\t\tcloseOnClick: true,\r\n\t\t\tanimate: { in: 'fadeIn', out: 'fadeOut' }\r\n\t\t})\r\n\r\n\r\n\t\t// chart\r\n\t\tfitnessChart = new Chart(\r\n\t\t\tdocument.getElementById('fitnessChart'),\r\n\t\t\tconfigChart\r\n\t\t);\r\n\r\n\t\tawait check_status();\r\n\r\n\t\t// call on start\r\n\t\tgetLog();\r\n\t})\r\n\r\n\tfunction resetDefaultParam() {\r\n\t\tconfig = {\r\n\t\t\tpop: 30,\r\n\t\t\tgen: 20,\r\n\t\t\tk: 30,\r\n\t\t\ts: 20,\r\n\t\t\toperator_flip: 60,\r\n\t\t\tswitch_branches: 30,\r\n\t\t\tswitch_exp: 70,\r\n\t\t\ttruncate_node: 25,\r\n\t\t\tmax_mutations: 10,\r\n\t\t\tvalue_bottom_limit: -100,\r\n\t\t\tvalue_top_limit: 100,\r\n\t\t\tmax_code_lines: 100,\r\n\t\t\tmax_depth: 10,\r\n\t\t\tmax_width: 10,\r\n\t\t\talpha_vars: 15,\r\n\t\t\tmax_branch_depth: 3,\r\n\t\t\tpayload_size: 1500,\r\n\t\t\tsimulation_time: 7,\r\n\t\t\tmulti_mtu: false,\r\n\t\t\tmtu_bottom_limit: 100,\r\n\t\t\tmtu_upper_limit: 1600,\r\n\t\t\tmtu_step: 200,\r\n\t\t\twildcards: [\r\n\t\t\t\t\"ReduceCwnd (tcb);\",\r\n\t\t\t\t\"segmentsAcked = SlowStart (tcb, segmentsAcked);\",\r\n\t\t\t\t\"CongestionAvoidance (tcb, segmentsAcked);\",\r\n\t\t\t\t\"TcpLinuxCongestionAvoidance (tcb, segmentsAcked);\"\r\n\t\t\t],\r\n\t\t\tvariables: [\r\n\t\t\t\t\"tcb->m_segmentSize\",\r\n\t\t\t\t\"tcb->m_cWnd\",\r\n\t\t\t\t\"segmentsAcked\",\r\n\t\t\t\t\"tcb->m_ssThresh\"\r\n\t\t\t]\r\n\t\t}\r\n\t}\r\n\r\n\tasync function saveConfig() {\r\n\t\tlet file = new Blob([JSON.stringify(config)], {type: 'text/plain'});\r\n\t\t// window.open(URL.createObjectURL(file));\r\n\t\tlet filename = 'params.pyGENP';\r\n\t\tif (window.navigator.msSaveOrOpenBlob) // IE10+\r\n\t\t\twindow.navigator.msSaveOrOpenBlob(file, filename);\r\n\t\telse { // Others\r\n\t\t\tvar a = document.createElement(\"a\"),\r\n\t\t\t\t\turl = URL.createObjectURL(file);\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = filename;\r\n\t\t\tdocument.body.appendChild(a);\r\n\t\t\ta.click();\r\n\t\t\t\r\n\t\t\tsetTimeout(function() {\r\n\t\t\t\tdocument.body.removeChild(a);\r\n\t\t\t\twindow.URL.revokeObjectURL(url);  \r\n\t\t\t}, 0); \r\n\t\t}\r\n\t}\r\n\r\n\tfunction loadConfig(e) {\r\n\t\tvar file = e.target.files[0];\r\n\t\tif (!file) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar reader = new FileReader();\r\n\t\treader.onload = function(e) {\r\n\t\t\tvar contents = e.target.result;\r\n\t\t\tconfig = JSON.parse(contents);\r\n\t\t};\r\n\t\treader.readAsText(file);\r\n\t\tbulmaToast.toast({ message: \"Imported!\", type: 'is-success' });\r\n\t}\r\n\r\n\tasync function cleanMemory() {\r\n\t\tclearInterval(individualsPoller);\r\n\t\tclearInterval(logPoller);\r\n\t\tcurrent_gen = [];\r\n\t\tgenerationNumber = null;\r\n\t\tcurrentBest = null;\r\n\t\thallOfFame = [];\r\n\t\tfitnessChart.data.datasets = [{\r\n\t\t\tlabel: 'Fitness',\r\n\t\t\tdata: [],\r\n\t\t\tborderColor: '#ccc',\r\n\t\t\tfill: false,\r\n\t\t\tcubicInterpolationMode: 'monotone',\r\n\t\t\ttension: 0.4,\r\n\t\t}];\r\n\t\tfitnessChart.data.labels = [];\r\n\t\tfitnessChart.update();\r\n\t\tconst res = await fetch('/clean');\r\n\t\tconst json = await res.json();\r\n\t\tlet result = JSON.parse(JSON.stringify(json))\r\n\t\t// alert(result.msg);\r\n\t\tbulmaToast.toast({ message: result.msg, type: 'is-success' });\r\n\t}\r\n\r\n\tasync function cleanNS3() {\r\n\t\tconst res = await fetch('/ns3reset');\r\n\t\tconst json = await res.json();\r\n\t\tlet result = JSON.parse(JSON.stringify(json))\r\n\t\t// alert(result.msg);\r\n\t\tbulmaToast.toast({ message: result.msg, type: 'is-success' });\r\n\t}\r\n\r\n\tasync function check_status() {\r\n\t\tconst res = await fetch('/check_status');\r\n\t\tconst json = await res.json();\r\n\t\tlet result = JSON.parse(JSON.stringify(json));\r\n\r\n\t\tif (result.status == 'RUNNING' && result.running) {\r\n\t\t\trunning = true;\r\n\t\t\tconfig = result.config\r\n\t\t\tindividualsPoller = setInterval(getCurrentGen, 15000);\r\n\t\t\tlogPoller = setInterval(getLog, 60000);\r\n\t\t\tif (result.hall_of_fame != null) {\r\n\t\t\t\thallOfFame = result.hall_of_fame;\r\n\r\n\t\t\t\tlet xDataLabels = Array.from({length: hallOfFame.length}, (_, i) => i + 1);\r\n\t\t\t\tlet yData = [];\r\n\t\t\t\tfor (let i of hallOfFame) {\r\n\t\t\t\t\tyData.push(i.fitness);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfitnessChart.data.datasets = [{\r\n\t\t\t\t\tlabel: 'Fitness',\r\n\t\t\t\t\tdata: yData,\r\n\t\t\t\t\tborderColor: '#ccc',\r\n\t\t\t\t\tfill: false,\r\n\t\t\t\t\tcubicInterpolationMode: 'monotone',\r\n\t\t\t\t\ttension: 0.4,\r\n\t\t\t\t}];\r\n\t\t\t\tfitnessChart.data.labels = xDataLabels;\r\n\t\t\t\tfitnessChart.update();\r\n\t\t\t}\r\n\t\t}\r\n\t\tbulmaToast.toast({ message: result.msg, type: 'is-success' });\r\n\t}\r\n\r\n\tasync function run() {\r\n\t\tconst res = await fetch(`/run?config=${JSON.stringify(config)}`, {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t'Accept': 'application/json',\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify(config)\r\n\t\t});\r\n\t\tif (res.status == 200)\r\n\t\t\trunning = true;\r\n\t\tconst json = await res.json();\r\n\t\tlet result = JSON.parse(JSON.stringify(json))\r\n\t\t// alert(result.msg);\r\n\t\tbulmaToast.toast({ message: result.msg, type: 'is-success' });\r\n\r\n\t\tindividualsPoller = setInterval(getCurrentGen, 15000);\r\n\t\tlogPoller = setInterval(getLog, 60000);\r\n\t}\r\n\r\n\tasync function getCurrentGen() {\r\n\t\tconst res = await fetchWithTimeout('/gen/current');\r\n\t\tconst json = await res.json();\r\n\t\tlet result = JSON.parse(JSON.stringify(json))\r\n\t\tif (result.individuals) {\r\n\t\t\tresult.individuals.sort((a, b) => a.id > b.id ? 1 : -1);\r\n\t\t\tcurrent_gen = result.individuals;\r\n\t\t\t\r\n\t\t\tcurrent_gen.forEach((item) => {\r\n\t\t\t\tlet fit = parseFloat(item.fitness);\r\n\t\t\t\tif (fit > 0 && (currentBest == null || fit > currentBest)) {\r\n\t\t\t\t\tcurrentBest = fit;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tif (current_gen.length > 0 \r\n\t\t\t\t&& (generationNumber == null \r\n\t\t\t\t\t|| parseInt(current_gen[0].gen) > generationNumber)) {\r\n\t\t\t\t\tgenerationNumber = parseInt(current_gen[0].gen);\r\n\t\t\t\t\tcurrentBest = null;\r\n\t\t\t\t\tgetHallOfFame();\r\n\t\t\t}\r\n\t\t}\r\n\t\t// alert(result.msg);\r\n\t\t// bulmaToast.toast({ message: result.msg, type: 'is-success' });\r\n\t}\r\n\r\n\tasync function getHallOfFame() {\r\n\t\tconst res = await fetch('/hall');\r\n\t\tconst json = await res.json();\r\n\t\tlet result = JSON.parse(JSON.stringify(json))\r\n\t\tif (result.individuals) {\r\n\t\t\thallOfFame = result.individuals;\r\n\r\n\t\t\tlet xDataLabels = Array.from({length: hallOfFame.length}, (_, i) => i + 1);\r\n\t\t\tlet yData = [];\r\n\t\t\tfor (let i of hallOfFame) {\r\n\t\t\t\tyData.push(i.fitness);\r\n\t\t\t}\r\n\r\n\t\t\tfitnessChart.data.datasets = [{\r\n\t\t\t\tlabel: 'Fitness',\r\n\t\t\t\tdata: yData,\r\n\t\t\t\tborderColor: '#ccc',\r\n\t\t\t\tfill: false,\r\n\t\t\t\tcubicInterpolationMode: 'monotone',\r\n\t\t\t\ttension: 0.4,\r\n\t\t\t}];\r\n\t\t\tfitnessChart.data.labels = xDataLabels;\r\n\t\t\tfitnessChart.update();\r\n\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\tasync function getLog() {\r\n\t\tconst res = await fetchWithTimeout('/log');\r\n\t\tconst json = await res.json();\r\n\t\tlet result = JSON.parse(JSON.stringify(json))\r\n\t\tlog = result.buffer;\r\n\t\t\r\n\t\tdocument.getElementById('terminal').innerHTML = \"\";\r\n\r\n\t\tconst term = new Terminal({convertEol: true});\r\n\t\tterm.setOption('fontSize', 15);\r\n\t\tterm.reset();\r\n\t\tterm.open(document.getElementById('terminal'));\t\r\n        term.write(log);\r\n\t}\r\n\r\n\tasync function restoreSnaphot(e) {\r\n\t\tvar file = e.target.files[0];\r\n\t\tif (!file) return;\r\n\r\n\t\tlet formData = new FormData();     \r\n\t\tformData.append(\"snapshot\", file);\r\n\r\n\t\tconst res = await fetch('/snapshot/restore', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\tbody: formData\r\n\t\t});\r\n\t\tconst json = await res.json();\r\n\t\tlet result = JSON.parse(JSON.stringify(json))\r\n\t\tif (result.config != null)\r\n\t\t\tconfig = result.config\r\n\t\tif (result.hall_of_fame != null) {\r\n\t\t\thallOfFame = result.hall_of_fame;\r\n\r\n\t\t\tlet xDataLabels = Array.from({length: hallOfFame.length}, (_, i) => i + 1);\r\n\t\t\tlet yData = [];\r\n\t\t\tfor (let i of hallOfFame) {\r\n\t\t\t\tyData.push(i.fitness);\r\n\t\t\t}\r\n\r\n\t\t\tfitnessChart.data.datasets = [{\r\n\t\t\t\tlabel: 'Fitness',\r\n\t\t\t\tdata: yData,\r\n\t\t\t\tborderColor: '#ccc',\r\n\t\t\t\tfill: false,\r\n\t\t\t\tcubicInterpolationMode: 'monotone',\r\n\t\t\t\ttension: 0.4,\r\n\t\t\t}];\r\n\t\t\tfitnessChart.data.labels = xDataLabels;\r\n\t\t\tfitnessChart.update();\r\n\t\t}\r\n\r\n\t\t// alert(result.msg);\r\n\t\tbulmaToast.toast({ message: result.msg, type: 'is-success' });\t\t\r\n\t}\r\n\r\n\tasync function snapshot() {\r\n\t\tconst res = await fetch(`/snapshot?config=${JSON.stringify(config)}`);\r\n\t\tconst json = await res.json();\r\n\t\tlet result = JSON.parse(JSON.stringify(json))\r\n\t\tdownload(result?.filename, result?.zip);\r\n\t\t// alert(result.msg);\r\n\t\tbulmaToast.toast({ message: result.msg, type: 'is-success' });\r\n\t}\r\n\r\n\tasync function baselineNS3() {\r\n\t\tcalculatingBaseline = true;\r\n\t\tconst res = await fetch('/ns3baseline');\r\n\t\tconst json = await res.json();\r\n\t\tlet result = JSON.parse(JSON.stringify(json))\r\n\t\tbaseline = result.baseline;\r\n\t\t// alert(result.msg);\r\n\t\tbulmaToast.toast({ message: result.msg, type: 'is-success' });\r\n\t\tcalculatingBaseline = false;\r\n\t}\r\n\r\n\tasync function autofix() {\r\n\t\tautofixing = true;\r\n\t\tconst res = await fetch('/autofix');\r\n\t\tconst json = await res.json();\r\n\t\tlet result = JSON.parse(JSON.stringify(json))\r\n\t\tbulmaToast.toast({ message: result.msg, type: 'is-success' });\r\n\t\tautofixing = false;\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t// utils\r\n\tfunction download(filename, data) {\r\n\t\tvar element = document.createElement('a');\r\n\t\telement.setAttribute('href', 'data:text/plain;base64,' + data);\r\n\t\telement.setAttribute('download', filename);\r\n\r\n\t\telement.style.display = 'none';\r\n\t\tdocument.body.appendChild(element);\r\n\r\n\t\telement.click();\r\n\r\n\t\tdocument.body.removeChild(element);\r\n\t}\r\n\r\n\t\r\n\t\r\n</script>\r\n\r\n\r\n\r\n\r\n<main>\r\n\r\n\t<div class=\"nav-bar\" style=\"align-items: flex-start;\">\r\n\t\t<img src=\"pyGENP.svg\" alt=\"logo\" style=\"height: 2.2rem; padding-right: .5rem;\">\r\n\t\tpyGENP\r\n\t</div>\r\n\r\n\t<!-- <p style=\"text-align: left;\">\r\n\t\tWelcome to pyGENP TCP Congestion Control Tool!\r\n\t</p> -->\r\n\r\n\t<div style=\"display:flex;justify-content: left;padding: 1rem;\">\r\n\t\t<button class=\"button\" class:running={running} on:click={() => run()}>\r\n\t\t\t<span class=\"material-icons\">\r\n\t\t\t\t{#if running}\r\n\t\t\t\t\t<Diamonds size=\"20\" color=\"#FEFEFE\" unit=\"px\" duration=\"2s\"></Diamonds>\r\n\t\t\t\t{:else}\r\n\t\t\t\t\tplay_arrow\r\n\t\t\t\t{/if}\r\n\t\t\t</span>\t\t\t\r\n\t\t\tRun\r\n\t\t</button>\r\n\r\n\t\t{#if running}\r\n\t\t<button class=\"button btn-stop\" on:click={() => {running = false; cleanMemory()}}>\r\n\t\t\t<span class=\"material-icons\">\r\n\t\t\t\tstop\r\n\t\t\t</span>\t\t\t\r\n\t\t\tStop Run\r\n\t\t</button>\r\n\t\t{/if}\r\n\t\t<!-- <button class=\"button\" on:click={() => getCurrentGen()}>\r\n\t\t\t<span class=\"material-icons\">\r\n\t\t\t\tplay_arrow\r\n\t\t\t</span>\t\t\t\r\n\t\t\tCurrent Gen\r\n\t\t</button> -->\r\n\t\t<label class=\"button\">\r\n\t\t\t<input type=\"file\" accept=\".zip\" style=\"display: none;\" on:change={(e) => restoreSnaphot(e)}>\r\n\t\t\t<span class=\"material-icons\">\r\n\t\t\t\talt_route\r\n\t\t\t</span>\t\t\t\r\n\t\t\tFrom Snapshot\r\n\t\t</label>\r\n\t\t<!-- disabled={!running} -->\r\n\t\t<button class=\"button\" on:click={() => snapshot()}>\r\n\t\t\t<span class=\"material-icons\">\r\n\t\t\t\thistory\r\n\t\t\t</span>\t\t\t\r\n\t\t\tTake Snapshot\r\n\t\t</button>\r\n\t\t<button class=\"button\" on:click={() => saveConfig()}>\r\n\t\t\t<span class=\"material-icons\">\r\n\t\t\t\tsave\r\n\t\t\t</span>\t\t\t\r\n\t\t\tSave Params\r\n\t\t</button>\r\n\t\t<label class=\"button\">\r\n\t\t\t<input type=\"file\" accept=\".pyGENP\" style=\"display: none;\" on:change={(e) => loadConfig(e)}>\r\n\t\t\t<span class=\"material-icons\">\r\n\t\t\t\tcloud_upload\r\n\t\t\t</span>\t\t\t\r\n\t\t\tLoad Params\r\n\t\t</label>\r\n\t\t<button class=\"button\" on:click={() => cleanMemory()}>\r\n\t\t\t<span class=\"material-icons\">\r\n\t\t\t\tcleaning_services\r\n\t\t\t</span>\t\t\t\r\n\t\t\tClean Memory\r\n\t\t</button>\r\n\t\t<button class=\"button\" on:click={() => cleanNS3()}>\r\n\t\t\t<span class=\"material-icons md-18\">\r\n\t\t\t\trestart_alt\r\n\t\t\t</span>\t\t\t\r\n\t\t\tNS3 Clean\r\n\t\t</button>\r\n\t\t<button class=\"button\" on:click={() => baselineNS3()}>\r\n\t\t\t{#if !calculatingBaseline}\r\n\t\t\t<span class=\"material-icons md-18\">\r\n\t\t\t\tflag\r\n\t\t\t</span>\r\n\t\t\tNS3 Baseline\r\n\t\t\t{:else}\r\n\t\t\t<Rainbow size=\"30\" color=\"#FEFEFE\" unit=\"px\" duration=\"2s\"></Rainbow>\r\n\t\t\t{/if}\r\n\t\t</button>\r\n\t\t<button class=\"button\" on:click={() => autofix()}>\r\n\t\t\t{#if !autofixing}\r\n\t\t\t<span class=\"material-icons md-18\">\r\n\t\t\t\tauto_fix_high\r\n\t\t\t</span>\r\n\t\t\tAutofix\r\n\t\t\t{:else}\r\n\t\t\t<Moon size=\"20\" color=\"#FEFEFE\" unit=\"px\" duration=\"1s\"></Moon>\r\n\t\t\t<span style=\"padding-left:.5rem\">Fixing</span>\r\n\t\t\t{/if}\r\n\t\t</button>\r\n\t</div>\r\n\r\n\t<div class=\"columns\" style=\"text-align: left;\">\r\n\t\t<div class=\"column\" style=\"min-width: 250px !important;\">\r\n\t\t\t<div style=\"display: flex;justify-content:space-between;align-items: end;\">\r\n\t\t\t\t<span style=\"padding: 0 1rem;\">\r\n\t\t\t\t\tParameters\r\n\t\t\t\t</span>\r\n\t\t\t\t<span style=\"padding: 0;font-size:1.2rem;cursor:pointer\" class=\"material-icons md-24\" on:click={() => resetDefaultParam()}>\r\n\t\t\t\t\trestart_alt\r\n\t\t\t\t</span>\r\n\t\t\t</div>\r\n\t\t\t<div style=\"padding: 1rem;padding-right: 0;padding-bottom: 0;font-size: .8rem;\">\r\n\r\n\t\t\t\t<div style=\"height:23rem;background:#222222;border-radius: .35rem .35rem .35rem 0;padding:1rem;padding-bottom:.5rem\">\r\n\t\t\t\t\t{#if settingsDisplay == 'default'}\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div style=\"padding-bottom: .2rem; font-weight: 800\">General</div>\r\n\r\n\t\t\t\t\t<div class=\"params\">\r\n\t\t\t\t\t\t<div>Population Size</div>\r\n\t\t\t\t\t\t<input type=\"text\" placeholder=\"eg. 30\" bind:value={config.pop}>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div class=\"params\">\r\n\t\t\t\t\t\t<div>Generations</div>\r\n\t\t\t\t\t\t<input type=\"text\" placeholder=\"eg. 15\" bind:value={config.gen}>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div style=\"padding-bottom: .2rem; font-weight: 800\">Tournament Selection</div>\r\n\r\n\t\t\t\t\t<div class=\"params\">\r\n\t\t\t\t\t\t<div class=\"dropdown is-hoverable\">\r\n\t\t\t\t\t\t\t<div class=\"dropdown-trigger\" aria-haspopup=\"true\" aria-controls=\"dropdown-ksample\">\r\n\t\t\t\t\t\t\t\tK Individuals\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"dropdown-menu\" id=\"dropdown-ksample\" role=\"menu\">\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"dropdown-content\">\r\n\t\t\t\t\t\t\t\t<div class=\"dropdown-item\">\r\n\t\t\t\t\t\t\t\t\thow many individuals to randomly select from population.\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<input type=\"text\" placeholder=\"eg. 20\" bind:value={config.k}>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div class=\"params\">\r\n\t\t\t\t\t\t<div class=\"dropdown is-hoverable\">\r\n\t\t\t\t\t\t\t<div class=\"dropdown-trigger\" aria-haspopup=\"true\" aria-controls=\"dropdown-ssample\">\r\n\t\t\t\t\t\t\t\tS Individuals\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"dropdown-menu\" id=\"dropdown-ssample\" role=\"menu\">\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"dropdown-content\">\r\n\t\t\t\t\t\t\t\t<div class=\"dropdown-item\">\r\n\t\t\t\t\t\t\t\t\thow many individuals to select if minimum fitness requirement is met.\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<input type=\"text\" placeholder=\"eg. 15\" bind:value={config.s}>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div style=\"padding-bottom: .2rem; font-weight: 800\">Mutation (in %)</div>\r\n\r\n\t\t\t\t\t<div class=\"params\">\r\n\t\t\t\t\t\t<div class=\"dropdown is-hoverable\">\r\n\t\t\t\t\t\t\t<div class=\"dropdown-trigger\" aria-haspopup=\"true\" aria-controls=\"dropdown-box\">\r\n\t\t\t\t\t\t\t\tOperator Flip\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"dropdown-menu\" id=\"dropdown-box\" role=\"menu\">\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"dropdown-content\">\r\n\t\t\t\t\t\t\t\t<div class=\"dropdown-item\">\r\n\t\t\t\t\t\t\t\t\tProbability to mutate an individual.\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<input type=\"text\" placeholder=\"eg. 20\" bind:value={config.operator_flip}>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div class=\"params\">\r\n\t\t\t\t\t\t<div class=\"dropdown is-hoverable\">\r\n\t\t\t\t\t\t\t<div class=\"dropdown-trigger\" aria-haspopup=\"true\" aria-controls=\"dropdown-box\">\r\n\t\t\t\t\t\t\t\tSwitch Branches\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"dropdown-menu\" id=\"dropdown-box\" role=\"menu\">\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"dropdown-content\">\r\n\t\t\t\t\t\t\t\t<div class=\"dropdown-item\">\r\n\t\t\t\t\t\t\t\t\tProbability to switch branches if it is a IfThenElse operator.\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<input type=\"text\" placeholder=\"eg. 20\" bind:value={config.switch_branches}>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div class=\"params\">\r\n\t\t\t\t\t\t<div class=\"dropdown is-hoverable\">\r\n\t\t\t\t\t\t\t<div class=\"dropdown-trigger\" aria-haspopup=\"true\" aria-controls=\"dropdown-box\">\r\n\t\t\t\t\t\t\t\tSwitch Exp\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"dropdown-menu\" id=\"dropdown-box\" role=\"menu\">\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"dropdown-content\">\r\n\t\t\t\t\t\t\t\t<div class=\"dropdown-item\">\r\n\t\t\t\t\t\t\t\t\tProbability to switch compatible expressions like sum and multiplication.\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<input type=\"text\" placeholder=\"eg. 20\" bind:value={config.switch_exp}>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div class=\"params\">\r\n\t\t\t\t\t\t<div class=\"dropdown is-hoverable\">\r\n\t\t\t\t\t\t\t<div class=\"dropdown-trigger\" aria-haspopup=\"true\" aria-controls=\"dropdown-box\">\r\n\t\t\t\t\t\t\t\tTruncate Node\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"dropdown-menu\" id=\"dropdown-box\" role=\"menu\">\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"dropdown-content\">\r\n\t\t\t\t\t\t\t\t<div class=\"dropdown-item\">\r\n\t\t\t\t\t\t\t\t\tProbability to mutate with truncation an individual.\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<input type=\"text\" placeholder=\"eg. 20\" bind:value={config.truncate_node}>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div class=\"params\">\r\n\t\t\t\t\t\t<div class=\"dropdown is-hoverable\">\r\n\t\t\t\t\t\t\t<div class=\"dropdown-trigger\" aria-haspopup=\"true\" aria-controls=\"dropdown-box\">\r\n\t\t\t\t\t\t\t\tMax Mutations\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"dropdown-menu\" id=\"dropdown-box\" role=\"menu\">\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"dropdown-content\">\r\n\t\t\t\t\t\t\t\t<div class=\"dropdown-item\">\r\n\t\t\t\t\t\t\t\t\tMax number of mutations.\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<input type=\"text\" placeholder=\"eg. 20\" bind:value={config.max_mutations}>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{:else if settingsDisplay == 'advanced'}\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div style=\"padding-bottom: .2rem; font-weight: 800\">Advanced</div>\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div class=\"params\">\r\n\t\t\t\t\t\t<div>Values Range</div>\r\n\t\t\t\t\t\t<div>[</div>\r\n\t\t\t\t\t\t<input style=\"width:3rem\" type=\"text\" placeholder=\"from\" bind:value={config.value_bottom_limit}>\r\n\t\t\t\t\t\t<div>,</div>\r\n\t\t\t\t\t\t<input style=\"width:3rem\" type=\"text\" placeholder=\"to\" bind:value={config.value_top_limit}>\r\n\t\t\t\t\t\t<div>]</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"params\">\r\n\t\t\t\t\t\t<div>Max Code Lines</div>\r\n\t\t\t\t\t\t<input type=\"text\" placeholder=\"eg. 30\" bind:value={config.max_code_lines}>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div style=\"padding-bottom: .2rem; font-weight: 800\">Tree Generator</div>\r\n\r\n\t\t\t\t\t<div class=\"params\">\r\n\t\t\t\t\t\t<div>Max Depth</div>\r\n\t\t\t\t\t\t<input type=\"text\" placeholder=\"eg. 30\" bind:value={config.max_depth}>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"params\">\r\n\t\t\t\t\t\t<div>Max Width</div>\r\n\t\t\t\t\t\t<input type=\"text\" placeholder=\"eg. 30\" bind:value={config.max_width}>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"params\">\r\n\t\t\t\t\t\t<div>Max Branch Depth</div>\r\n\t\t\t\t\t\t<input type=\"text\" placeholder=\"eg. 30\" bind:value={config.max_branch_depth}>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div class=\"params\">\r\n\t\t\t\t\t\t<div>Alpha Variables (%)</div>\r\n\t\t\t\t\t\t<input type=\"text\" placeholder=\"eg. 30\" bind:value={config.alpha_vars}>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div style=\"padding-bottom: .2rem; font-weight: 800\">Initial Knowledge</div>\r\n\r\n\t\t\t\t\t<div class=\"params\">\r\n\t\t\t\t\t\t<button class=\"button\" on:click={() => wildcardModalIsOpen = true}>\r\n\t\t\t\t\t\t\t<span class=\"material-icons md-18\">edit</span>\r\n\t\t\t\t\t\t\tWildcards\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button class=\"button\" on:click={() => variableModalIsOpen = true}>\r\n\t\t\t\t\t\t\t<span class=\"material-icons md-18\">edit</span>\r\n\t\t\t\t\t\t\tVariables\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div class=\"modal\" class:is-active={wildcardModalIsOpen}>\r\n\t\t\t\t\t\t<div class=\"modal-background\"></div>\r\n\t\t\t\t\t\t<div class=\"modal-card\">\r\n\t\t\t\t\t\t\t<header class=\"modal-card-head\">\r\n\t\t\t\t\t\t\t\t<p class=\"modal-card-title\">Wildcard code</p>\r\n\t\t\t\t\t\t\t\t<button class=\"delete\" aria-label=\"close\" on:click={() => wildcardModalIsOpen = false}></button>\r\n\t\t\t\t\t\t\t</header>\r\n\t\t\t\t\t\t\t<section class=\"modal-card-body\">\r\n\t\t\t\t\t\t\t\t<!-- Content ... -->\r\n\t\t\t\t\t\t\t\t<div style=\"padding-bottom: 1rem;\">All the edits are recorded.</div>\r\n\t\t\t\t\t\t\t\t<!-- <div class=\"wildcard-container\" contenteditable=\"true\"></div> -->\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t{#each config.wildcards as wildcard}\r\n\t\t\t\t\t\t\t\t<div style=\"display: flex;justify-content: space-between;\">\r\n\t\t\t\t\t\t\t\t\t<input style=\"background:#2e2e2e;width: 95%;\" type=\"text\" placeholder=\"int a = 10;\" bind:value={wildcard}>\r\n\t\t\t\t\t\t\t\t\t<button style=\"margin-left: 0.5rem;\" class=\"button\" on:click={() => config.wildcards = config.wildcards.filter(code => code != wildcard)}>\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"material-icons md-18\" style=\"padding: 0;\">delete</span>\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t{/each}\r\n\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t\t<footer class=\"modal-card-foot\" style=\"justify-content: flex-end;\">\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<button class=\"button\" on:click={() => config.wildcards = [...config.wildcards, \"\"]}>\r\n\t\t\t\t\t\t\t\t\t<span class=\"material-icons md-18\">add</span>\r\n\t\t\t\t\t\t\t\t\tAdd Wildcard\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t<button class=\"button is-success\" on:click={() => wildcardModalIsOpen = false}>Continue</button>\r\n\t\t\t\t\t\t\t</footer>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"modal\" class:is-active={variableModalIsOpen}>\r\n\t\t\t\t\t\t<div class=\"modal-background\"></div>\r\n\t\t\t\t\t\t<div class=\"modal-card\">\r\n\t\t\t\t\t\t\t<header class=\"modal-card-head\">\r\n\t\t\t\t\t\t\t\t<p class=\"modal-card-title\">Initial Variables</p>\r\n\t\t\t\t\t\t\t\t<button class=\"delete\" aria-label=\"close\" on:click={() => variableModalIsOpen = false}></button>\r\n\t\t\t\t\t\t\t</header>\r\n\t\t\t\t\t\t\t<section class=\"modal-card-body\">\r\n\t\t\t\t\t\t\t\t<!-- Content ... -->\r\n\t\t\t\t\t\t\t\t<div style=\"padding-bottom: 1rem;\">All the edits are recorded.</div>\r\n\t\t\t\t\t\t\t\t<!-- <div class=\"wildcard-container\" contenteditable=\"true\"></div> -->\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t{#each config.variables as variable}\r\n\t\t\t\t\t\t\t\t<div style=\"display: flex;justify-content: space-between;\">\r\n\t\t\t\t\t\t\t\t\t<input style=\"background:#2e2e2e;width: 95%;\" type=\"text\" placeholder=\"eg. CongestionWnd\" bind:value={variable}>\r\n\t\t\t\t\t\t\t\t\t<button style=\"margin-left: 0.5rem;\" class=\"button\" on:click={() => config.variables = config.variables.filter(code => code != variable)}>\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"material-icons md-18\" style=\"padding: 0;\">delete</span>\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t{/each}\r\n\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t\t<footer class=\"modal-card-foot\" style=\"justify-content: flex-end;\">\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<button class=\"button\" on:click={() => config.variables = [...config.variables, \"\"]}>\r\n\t\t\t\t\t\t\t\t\t<span class=\"material-icons md-18\">add</span>\r\n\t\t\t\t\t\t\t\t\tAdd Variable\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t<button class=\"button is-success\" on:click={() => variableModalIsOpen = false}>Continue</button>\r\n\t\t\t\t\t\t\t</footer>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{:else}\r\n\t\t\t\t\t<div style=\"padding-bottom: .2rem; font-weight: 800\">Simulator</div>\r\n\r\n\t\t\t\t\t<div class=\"params\">\r\n\t\t\t\t\t\t<div class=\"dropdown is-hoverable\">\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div class=\"dropdown-trigger\" aria-haspopup=\"true\" aria-controls=\"dropdown-mtu\">\r\n\t\t\t\t\t\t\t\tPayload Size (bytes)\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"dropdown-menu\" id=\"dropdown-mtu\" role=\"menu\">\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"dropdown-content\">\r\n\t\t\t\t\t\t\t\t<div class=\"dropdown-item\">\r\n\t\t\t\t\t\t\t\t\tPayload Size (or MTU) is the maximum payload length for a particular transmission media.\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<input type=\"text\" placeholder=\"eg. 1500\" bind:value={config.payload_size}>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"params\">\r\n\t\t\t\t\t\t<div class=\"dropdown is-hoverable\">\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div class=\"dropdown-trigger\" aria-haspopup=\"true\" aria-controls=\"dropdown-mtu\">\r\n\t\t\t\t\t\t\t\tSimulation Time (s)\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"dropdown-menu\" id=\"dropdown-mtu\" role=\"menu\">\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"dropdown-content\">\r\n\t\t\t\t\t\t\t\t<div class=\"dropdown-item\">\r\n\t\t\t\t\t\t\t\t\tHow many seconds simulation for a single individual should be evaluated.\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<input type=\"text\" placeholder=\"eg. 1500\" bind:value={config.simulation_time}>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"params\">\r\n\t\t\t\t\t\t<div class=\"dropdown is-hoverable\">\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div class=\"dropdown-trigger\" aria-haspopup=\"true\" aria-controls=\"dropdown-mtu\">\r\n\t\t\t\t\t\t\t\tMultiple MTU Evaluation\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"dropdown-menu\" id=\"dropdown-mtu\" role=\"menu\">\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div class=\"dropdown-content\">\r\n\t\t\t\t\t\t\t\t<div class=\"dropdown-item\">\r\n\t\t\t\t\t\t\t\t\tEvaluate Fitness as the sum of evaluation of multiple MTU sizes.\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div style=\"display: flex;width: 1rem;top: .2rem;position: relative;\">\r\n\t\t\t\t\t\t\t<input type=\"checkbox\" placeholder=\"eg. 1500\" bind:checked={config.multi_mtu}>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div class:disabled={!config.multi_mtu} style=\"padding-top:.5rem;\">\r\n\t\t\t\t\t\t<div style=\"padding-bottom: .2rem; font-weight: 800\">Multi MTU Settings</div>\r\n\r\n\t\t\t\t\t\t<div class=\"params\">\r\n\t\t\t\t\t\t\t<div>MTU Range</div>\r\n\t\t\t\t\t\t\t<div>[</div>\r\n\t\t\t\t\t\t\t<input style=\"width:3rem\" type=\"text\" placeholder=\"from\" bind:value={config.mtu_bottom_limit}>\r\n\t\t\t\t\t\t\t<div>,</div>\r\n\t\t\t\t\t\t\t<input style=\"width:3rem\" type=\"text\" placeholder=\"to\" bind:value={config.mtu_upper_limit}>\r\n\t\t\t\t\t\t\t<div>]</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"params\">\r\n\t\t\t\t\t\t\t<div>MTU Step</div>\r\n\t\t\t\t\t\t\t<input type=\"text\" placeholder=\"eg. 100\" bind:value={config.mtu_step}>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{/if}\r\n\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\r\n\t\t\t\t<div class=\"params\" style=\"justify-content: flex-start;\">\r\n\t\t\t\t\t<span class=\"tab\" class:tab-active={settingsDisplay == 'default'} \r\n\t\t\t\t\t\ton:click={() => settingsDisplay = 'default'}>\r\n\t\t\t\t\t\tGeneral</span>\r\n\t\t\t\t\t<span class=\"tab\" class:tab-active={settingsDisplay == 'advanced'}  \r\n\t\t\t\t\t\ton:click={() => settingsDisplay = 'advanced'}>\r\n\t\t\t\t\t\tAdvanced</span>\r\n\t\t\t\t\t<span class=\"tab\"  class:tab-active={settingsDisplay == 'sim'} \r\n\t\t\t\t\t\ton:click={() => settingsDisplay = 'sim'}>\r\n\t\t\t\t\t\tSim</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\t\t\t\r\n\t\t</div>\r\n\t\t<div class=\"column is-four-fifths\">\r\n\t\t\t<span style=\"padding: 1rem;padding-left:0;\">\r\n\t\t\t\t🧬 Current Generation Individuals 🧬\r\n\t\t\t</span>\r\n\t\t\t<div class=\"individual-container\" style=\"height:23rem;\">\r\n\t\t\t\t{#each current_gen as ind}\r\n\t\t\t\t\t<div class=\"ind\" style=\"text-align: left;\">\r\n\t\t\t\t\t\t<div style=\"width: 20%\">{ind.id}</div>\r\n\t\t\t\t\t\t<div style=\"width: 30%;text-align:center;\">{ind.path}</div>\r\n\t\t\t\t\t\t<div style=\"width: 25%;text-align:right;\">{ind.time.toFixed(2)} seconds</div>\r\n\t\t\t\t\t\t<div style=\"width: 25%;text-align:right;\">{ind.fitness.toFixed(2)} Mbit/s</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t{/each}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\r\n\t<div class=\"columns\">\r\n\t\t<div class=\"column\" style=\"text-align: left;padding-left: 1.8rem;display:flex;justify-content:space-evenly\">\r\n\t\t\t\r\n\t\t\t<span>🧬 <b>Generation:</b> \r\n\t\t\t\t<span class=\"span-value\">{generationNumber || 'n.a.'}</span> \r\n\t\t\t\t/ {config.gen}</span>\r\n\r\n\t\t\t{#if !calculatingBaseline}\r\n\t\t\t<span>🏁 <b>Baseline:</b> \r\n\t\t\t\t<span class=\"span-value\">\r\n\t\t\t\t\t{baseline?.toFixed(2) || \"n.a.\"}\r\n\t\t\t\t</span> Mbit/s</span>\r\n\t\t\t{:else}\r\n\t\t\t<Rainbow size=\"30\" color=\"#FEFEFE\" unit=\"px\" duration=\"2s\"></Rainbow>\r\n\t\t\t{/if}\r\n\r\n\t\t\t<span>🥇 <b>Current Best:</b> \r\n\t\t\t\t<span class=\"span-value\">{currentBest?.toFixed(2) || \"n.a.\"}</span> \r\n\t\t\t\tMbit/s</span>\r\n\r\n\t\t\t<span style=\"padding-right: 1rem\">💡 <b>Gain:</b> \r\n\t\t\t\t<span class=\"span-value\">{((((currentBest ?? 0)/(baseline || 1))-1)*100).toFixed(2)}</span>\r\n\t\t\t\t%</span>\r\n\t\t</div>\r\n\t\t<div class=\"column is-two-fifths\" style=\"margin: auto;\">\t\t\t\r\n\t\t\t<div style=\"display: flex; align-items: center; justify-content: space-between;\">\r\n\t\t\t\t<div>{((current_gen.length/config.pop)*100).toFixed(0)}%</div>\r\n\t\t\t\t<div class=\"progress-bar\" style=\"width: 89%;\">\r\n\t\t\t\t\t<div class=\"progress-bar-thumb\" style=\"width: {(current_gen.length/config.pop)*100}%;\"></div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\r\n\r\n\t<div class=\"columns\">\r\n\t\t<div class=\"column is-half\">\r\n\t\t\t<span style=\"padding: 1rem;padding-left:0;\">\r\n\t\t\t\t📈 Fitness Chart\r\n\t\t\t</span>\r\n\t\t\t<div style=\"padding: 2rem;padding-top:0.5rem;\">\r\n\t\t\t\t<canvas id=\"fitnessChart\"></canvas>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"column is-one-fourth\">\r\n\t\t\t<div style=\"display: flex;justify-content:center;align-items:center;\">\r\n\t\t\t\t<span>\r\n\t\t\t\t\t🏆 Hall of Fame Individuals 🏆\r\n\t\t\t\t</span>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"individual-container\">\r\n\t\t\t\t{#each hallOfFame as ind}\r\n\t\t\t\t\t<div class=\"ind\" style=\"background:#f1eb2e!important;color:#424242!important;\">\r\n\t\t\t\t\t\t<div style=\"width: 33.3%;text-align: left;\">{ind.id}</div>\r\n\t\t\t\t\t\t<div style=\"width: 33.3%;text-align:center;\">{ind.gen} Generation</div>\r\n\t\t\t\t\t\t<div style=\"width: 33.3%;text-align:right;\">{ind.fitness.toFixed(2)} Mbit/s</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t{/each}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\r\n\t\r\n\r\n\t<div style=\"height:6rem;padding:2rem;\">\r\n\r\n\t</div>\r\n\t\r\n\r\n\t<div class=\"console-container\">\r\n\t\t<div style=\"margin: 0 0 0 1rem;display:flex; justify-content: space-between;align-items: center;\">\r\n\t\t\tConsole log\r\n\t\t\t<button class=\"button\" on:click={() => {\r\n\t\t\t\tif (fullScreenTerminal) {\r\n\t\t\t\t\tdocument.getElementById('cons-container').style.height = \"3rem\";\r\n\t\t\t\t\tfullScreenTerminal = false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdocument.getElementById('cons-container').style.height = \"27rem\";\r\n\t\t\t\t\tfullScreenTerminal = true;\r\n\t\t\t\t}\r\n\t\t\t}}>\r\n\t\t\t\t\r\n\t\t\t\t{#if fullScreenTerminal}\r\n\t\t\t\t\t<span class=\"material-icons\">\r\n\t\t\t\t\t\tclose_fullscreen\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\tCollapse\r\n\t\t\t\t{:else}\r\n\t\t\t\t\t<span class=\"material-icons\">\r\n\t\t\t\t\t\topen_in_full\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\tExpand\r\n\t\t\t\t{/if}\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t\t<!-- <div id=\"dragbar\" style=\"cursor: n-resize; height: 0.25rem; background-color: #3c3c3c;\">\r\n\r\n\t\t</div> -->\r\n\t\t<div id=\"cons-container\" class=\"console\">\r\n\t\t\t<!-- <pre>\r\n\t\t\t\t{log}\r\n\t\t\t</pre> -->\r\n\t\t\t<div id=\"terminal\"></div>\r\n\t\t</div>\r\n\t</div>\r\n\t\r\n\r\n\t\r\n</main>\r\n\r\n<style>\r\n\t.disabled {\r\n\t\topacity: 0.5;\r\n\t\tpointer-events: none;\r\n\t}\r\n\t.tab {\r\n\t\tpadding: 0.25rem 1rem;\r\n\t\tcursor: pointer;\r\n\t\tbackground:#2a2a2a;\r\n\t\tfont-weight: 600;\r\n\t}\r\n\t.tab:hover {\r\n\t\tbackground:#262626;\r\n\t\tcolor: #fff;\r\n\t}\r\n\t.tab-active {\r\n\t\tbackground:#262626;\r\n\t\tcolor: #fff;\r\n\t}\r\n\t.tab-active:hover {\r\n\t\tbackground:#2a2a2a;\r\n\t}\r\n\t.progress-bar {\r\n\t\tbackground-color: #3c3c3c;\r\n\t\tborder-radius: 1rem;\r\n\t\theight: .4rem;\r\n\t\tmargin-right: 1rem;\r\n\t\toverflow: hidden;\r\n\t}\r\n\t.progress-bar-thumb {\r\n\t\tbackground-color: #ccc;\r\n\t\twidth: 0%;\r\n\t\theight: .4rem;\r\n\t\tborder-radius: 1rem;\r\n\t}\r\n\r\n\t.running {\r\n\t\tbackground: #259743 !important;\r\n\t\tcolor: #ffffff !important;\r\n\t\tpointer-events: none;\r\n\t}\r\n\t.ind {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\tfont-size: 0.8rem;\r\n\t\tpadding: 0rem 0.5rem;\r\n\t\tborder-radius: 0.2rem;\r\n\t\twidth: 100%;\r\n\t\tbackground: #2f6e60;\r\n\t\tmargin-bottom: 0.4rem;\r\n\t\tcolor: #c7c7c7;\r\n\t\tfont-weight: 800;\r\n\t\tbox-shadow: 0 0.1rem 0.5rem #343434;\r\n\t}\r\n\t.dropdown-content {\r\n\t\tbackground: #242424;\r\n\t\tpadding: 0;\r\n\t\twidth: 20rem;\r\n\t}\r\n\t.dropdown-item {\r\n\t\tpadding: 0.5rem;\r\n\t\tcolor: #838383;\r\n\t\ttext-align: left;\r\n\t}\r\n\t.params {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\talign-items: baseline;\r\n\t}\r\n\t.params input {\r\n\t\twidth: 4.5rem;\r\n\t\ttext-align: right;\r\n\t\tpadding: 0.2rem 0.5rem;\r\n\t}\r\n\t.console-container {\t\t\r\n\t\tposition: fixed;\r\n\t\t/* width: 48rem; */\r\n\t\twidth: 100%;\r\n\t\tbottom: 0rem;\r\n\t\tright: 0;\r\n\t\tborder-radius: .35rem .35rem 0 0;\r\n\t\ttext-align: left;\r\n\t\tbackground: #000;\r\n\t\tpadding: 0.5rem;\r\n\t\tpadding-top: 1rem;\r\n\t}\r\n\t.console {\r\n\t\t/* padding: 1rem; */\r\n\t\tpadding: 0 1rem;\r\n\t\tpadding-right: 0;\r\n\t\tfont-size: .8rem;\r\n\t\tline-height: 1rem; \r\n\t\theight: 3rem; \r\n\t\twidth: 100%; \r\n\t\t/* overflow-y: auto; */\r\n\t\toverflow: hidden;\r\n\t\tbackground: #000;\r\n\t\t/* resize: vertical; */\r\n\t}\r\n\t.individual-container {\r\n\t\tborder-radius: 0.3rem;\r\n\t\tbackground-color: #3c3c3c;\r\n\t\tpadding: 1rem;\r\n\t\tmargin: 1rem;\r\n\t\tmargin-left: 0rem;\r\n\t\t/* margin-right: 2.5rem; */\r\n\t\theight: 20rem;\r\n\t\toverflow-y: auto;\r\n\t}\r\n\t.nav-bar {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\tbackground: #262626;\r\n    \tcolor: #e9e9e9;\r\n\t\tfont-size: 1.2rem;\r\n\t\tpadding: 1rem;\r\n\t\tfont-weight: 800;\r\n\t}\r\n\tmain {\r\n\t\ttext-align: center;\r\n\t\tpadding: 0;\r\n\t\tmargin: 0;\r\n\t\tmargin: 0 auto;\r\n\t\theight: 100%;\r\n\t}\r\n\r\n\t@media (min-width: 640px) {\r\n\t\tmain {\r\n\t\t\tmax-width: none;\r\n\t\t}\r\n\t}\r\n</style>","import App from './App.svelte';\r\n\r\nconst app = new App({\r\n\ttarget: document.body,\r\n});\r\n\r\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_input_value","input","set_style","key","important","style","setProperty","toggle_class","toggle","classList","current_component","set_current_component","component","onMount","Error","get_current_component","$$","on_mount","push","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","create_component","mount_component","customElement","on_destroy","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","type","index","indexOf","splice","$set","$$props","obj","$$set","keys","fetchWithTimeout","async","resource","timeout","controller","AbortController","id","setTimeout","abort","response","fetch","signal","clearTimeout","color","unit","duration","size","top","multi_mtu","payload_size","simulation_time","mtu_bottom_limit","mtu_upper_limit","mtu_step","wildcards","variables","value_bottom_limit","value_top_limit","max_code_lines","max_depth","max_width","max_branch_depth","alpha_vars","gen","k","s","operator_flip","switch_branches","switch_exp","truncate_node","max_mutations","path","time","toFixed","fitness","individualsPoller","logPoller","config","current_gen","hallOfFame","generationNumber","baseline","currentBest","calculatingBaseline","autofixing","wildcardModalIsOpen","variableModalIsOpen","log","fullScreenTerminal","running","settingsDisplay","configChart","labels","datasets","label","borderColor","cubicInterpolationMode","tension","responsive","maintainAspectRatio","scales","y","display","fitnessChart","resetDefaultParam","saveConfig","file","Blob","JSON","stringify","filename","window","navigator","msSaveOrOpenBlob","url","URL","createObjectURL","href","download","body","click","revokeObjectURL","loadConfig","e","files","reader","FileReader","onload","contents","result","parse","readAsText","bulmaToast","toast","message","cleanMemory","clearInterval","res","json","msg","method","headers","Accept","status","setInterval","getCurrentGen","getLog","individuals","sort","item","fit","parseFloat","parseInt","xDataLabels","_","yData","getHallOfFame","buffer","getElementById","innerHTML","term","Terminal","convertEol","setOption","reset","open","write","restoreSnaphot","formData","FormData","hall_of_fame","snapshot","zip","baselineNS3","autofix","resize","setDefaults","position","closeOnClick","animate","in","out","Chart","check_status","cleanNS3","code","wildcard","variable","height"],"mappings":"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"}